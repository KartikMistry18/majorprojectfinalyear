"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/CrowdFunding.js":
/*!*********************************!*\
  !*** ./Context/CrowdFunding.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrowdFundingContext: () => (/* binding */ CrowdFundingContext),\n/* harmony export */   CrowdFundingProvider: () => (/* binding */ CrowdFundingProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _contants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contants */ \"./Context/contants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n// Use Alchemy Sepolia URL for RPC provider\nconst SEPOLIA_ALCHEMY_URL = \"https://eth-sepolia.g.alchemy.com/v2/Lo87KWizL62fSIBcI43XrftyX8Q9Pdc7\";\n// Helper function to fetch contract instance\nconst fetchContract = (signerOrProvider)=>{\n    console.log(\"crowdfunding address : \", _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress);\n    console.log(\"crowdfunding ABI  : \", _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI);\n    console.log(\"Signer  : \", signerOrProvider);\n    return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress, _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI, signerOrProvider);\n};\n// Create Context\nconst CrowdFundingContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst CrowdFundingProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const titleData = \"Crowd Funding Contract\";\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Function to create a campaign\n    const createCampaign = async (campaign)=>{\n        try {\n            const { title, description, amount, deadline } = campaign;\n            const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n            const connection = await web3Modal.connect();\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.BrowserProvider(connection);\n            const signer = await provider.getSigner();\n            const contract = fetchContract(signer);\n            console.log(\"contract\", contract);\n            console.log(\"Connected account:\", currentAccount);\n            const transaction = await contract.createCampaign(currentAccount, title, description, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseUnits(amount, 18), new Date(deadline).getTime());\n            await transaction.wait();\n            console.log(\"Campaign created successfully:\", transaction);\n        } catch (error) {\n            console.error(\"Error creating campaign:\", error);\n        }\n    };\n    // Fetch all campaigns\n    const getCampaigns = async ()=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            const contract = fetchContract(provider);\n            console.log(\"contract:\", contract);\n            const campaigns = await contract.getCampaigns();\n            return campaigns.map((campaign, i)=>({\n                    owner: campaign.owner,\n                    title: campaign.title,\n                    description: campaign.description,\n                    target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.target.toString()),\n                    deadline: campaign.deadline.toNumber(),\n                    amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.amountCollected.toString()),\n                    pId: i\n                }));\n        } catch (error) {\n            console.error(\"Error fetching campaigns:\", error);\n            return [];\n        }\n    };\n    // Fetch campaigns of the current user\n    const getUserCampaigns = async ()=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            const contract = fetchContract(provider);\n            const allCampaigns = await contract.getCampaigns();\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            const currentUser = accounts[0];\n            const filteredCampaigns = allCampaigns.filter((campaign)=>campaign.owner === currentUser);\n            return filteredCampaigns.map((campaign, i)=>({\n                    owner: campaign.owner,\n                    title: campaign.title,\n                    description: campaign.description,\n                    target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.target.toString()),\n                    deadline: campaign.deadline.toNumber(),\n                    amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.amountCollected.toString()),\n                    pId: i\n                }));\n        } catch (error) {\n            console.error(\"Error fetching user campaigns:\", error);\n            return [];\n        }\n    };\n    // Donate to a campaign\n    const donate = async (pId, amount)=>{\n        try {\n            const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n            const connection = await web3Modal.connect();\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.BrowserProvider(connection);\n            const signer = await provider.getSigner();\n            const contract = fetchContract(signer);\n            const transaction = await contract.donateToCampaign(pId, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseEther(amount)\n            });\n            await transaction.wait();\n            window.location.reload();\n            return transaction;\n        } catch (error) {\n            console.error(\"Error donating:\", error);\n        }\n    };\n    // Fetch donations for a campaign\n    const getDonations = async (pId)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            const contract = fetchContract(provider);\n            const donations = await contract.getDonators(pId);\n            const numberOfDonations = donations[0].length;\n            return donations[0].map((donator, i)=>({\n                    donator,\n                    donations: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(donations[1][i].toString())\n                }));\n        } catch (error) {\n            console.error(\"Error fetching donations:\", error);\n            return [];\n        }\n    };\n    // Check if a wallet is connected\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) {\n                console.log(\"Install Metamask\");\n                return;\n            }\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0]);\n            } else {\n                console.log(\"No account found\");\n            }\n        } catch (error) {\n            console.error(\"Error connecting wallet:\", error);\n        }\n    };\n    // Connect wallet function\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) {\n                console.log(\"Install Metamask\");\n                return;\n            }\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0]);\n        } catch (error) {\n            console.error(\"Error while connecting wallet:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrowdFundingProvider.useEffect\": ()=>{\n            checkIfWalletConnected();\n        }\n    }[\"CrowdFundingProvider.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CrowdFundingContext.Provider, {\n        value: {\n            titleData,\n            currentAccount,\n            createCampaign,\n            getCampaigns,\n            getUserCampaigns,\n            donate,\n            getDonations,\n            connectWallet\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\Techstack\\\\Hackathon\\\\miniprojectcrowdfunding\\\\Context\\\\CrowdFunding.js\",\n        lineNumber: 182,\n        columnNumber: 9\n    }, undefined);\n};\n_s(CrowdFundingProvider, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n_c = CrowdFundingProvider;\nvar _c;\n$RefreshReg$(_c, \"CrowdFundingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixRQUFRNEIsS0FBSyxDQUFDLDRCQUE0QkE7UUFDOUM7SUFDSjtJQUVBLDBCQUEwQjtJQUMxQixNQUFNb0MsZ0JBQWdCO1FBQ2xCLElBQUk7WUFDQSxJQUFJLENBQUNwQixPQUFPQyxRQUFRLEVBQUU7Z0JBQ2xCN0MsUUFBUUMsR0FBRyxDQUFDO2dCQUNaO1lBQ0o7WUFFQSxNQUFNMEMsV0FBVyxNQUFNQyxPQUFPQyxRQUFRLENBQUNDLE9BQU8sQ0FBQztnQkFBRUMsUUFBUTtZQUFzQjtZQUMvRXZDLGtCQUFrQm1DLFFBQVEsQ0FBQyxFQUFFO1FBQ2pDLEVBQUUsT0FBT2YsT0FBTztZQUNaNUIsUUFBUTRCLEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ3BEO0lBQ0o7SUFFQXJDLGdEQUFTQTswQ0FBQztZQUNOd0U7UUFDSjt5Q0FBRyxFQUFFO0lBRUwscUJBQ0ksOERBQUM1RCxvQkFBb0I4RCxRQUFRO1FBQ3pCWixPQUFPO1lBQ0gvQztZQUNBQztZQUNBRTtZQUNBb0I7WUFDQVk7WUFDQVU7WUFDQU07WUFDQU87UUFDSjtrQkFFQzNEOzs7Ozs7QUFHYixFQUFFO0dBaExXRDtLQUFBQSIsInNvdXJjZXMiOlsiRDpcXFRlY2hzdGFja1xcSGFja2F0aG9uXFxtaW5pcHJvamVjdGNyb3dkZnVuZGluZ1xcQ29udGV4dFxcQ3Jvd2RGdW5kaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBXZWIzTW9kYWwgZnJvbSBcIndlYjNtb2RhbFwiO1xyXG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tIFwiZXRoZXJzXCI7XHJcbmltcG9ydCB7IENyb3dkRnVuZGluZ0FCSSwgQ3Jvd2RGdW5kaW5nQWRkcmVzcyB9IGZyb20gXCIuL2NvbnRhbnRzXCI7XHJcblxyXG4vLyBVc2UgQWxjaGVteSBTZXBvbGlhIFVSTCBmb3IgUlBDIHByb3ZpZGVyXHJcbmNvbnN0IFNFUE9MSUFfQUxDSEVNWV9VUkwgPSBcImh0dHBzOi8vZXRoLXNlcG9saWEuZy5hbGNoZW15LmNvbS92Mi9Mbzg3S1dpekw2MmZTSUJjSTQzWHJmdHlYOFE5UGRjN1wiO1xyXG5cclxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGZldGNoIGNvbnRyYWN0IGluc3RhbmNlXHJcbmNvbnN0IGZldGNoQ29udHJhY3QgPSAoc2lnbmVyT3JQcm92aWRlcikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJjcm93ZGZ1bmRpbmcgYWRkcmVzcyA6IFwiLCBDcm93ZEZ1bmRpbmdBZGRyZXNzKTtcclxuICAgIGNvbnNvbGUubG9nKFwiY3Jvd2RmdW5kaW5nIEFCSSAgOiBcIiwgQ3Jvd2RGdW5kaW5nQUJJKTtcclxuICAgIGNvbnNvbGUubG9nKFwiU2lnbmVyICA6IFwiLCBzaWduZXJPclByb3ZpZGVyKTtcclxuXHJcbiAgICByZXR1cm4gbmV3IGV0aGVycy5Db250cmFjdChDcm93ZEZ1bmRpbmdBZGRyZXNzLCBDcm93ZEZ1bmRpbmdBQkksIHNpZ25lck9yUHJvdmlkZXIpO1xyXG59O1xyXG5cclxuLy8gQ3JlYXRlIENvbnRleHRcclxuZXhwb3J0IGNvbnN0IENyb3dkRnVuZGluZ0NvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XHJcblxyXG5leHBvcnQgY29uc3QgQ3Jvd2RGdW5kaW5nUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgICBjb25zdCB0aXRsZURhdGEgPSBcIkNyb3dkIEZ1bmRpbmcgQ29udHJhY3RcIjtcclxuICAgIGNvbnN0IFtjdXJyZW50QWNjb3VudCwgc2V0Q3VycmVudEFjY291bnRdID0gdXNlU3RhdGUoXCJcIik7XHJcblxyXG4gICAgLy8gRnVuY3Rpb24gdG8gY3JlYXRlIGEgY2FtcGFpZ25cclxuICAgIGNvbnN0IGNyZWF0ZUNhbXBhaWduID0gYXN5bmMgKGNhbXBhaWduKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgeyB0aXRsZSwgZGVzY3JpcHRpb24sIGFtb3VudCwgZGVhZGxpbmUgfSA9IGNhbXBhaWduO1xyXG4gICAgICAgICAgICBjb25zdCB3ZWIzTW9kYWwgPSBuZXcgV2ViM01vZGFsKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCB3ZWIzTW9kYWwuY29ubmVjdCgpO1xyXG4gICAgICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMuQnJvd3NlclByb3ZpZGVyKGNvbm5lY3Rpb24pO1xyXG4gICAgICAgICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCBwcm92aWRlci5nZXRTaWduZXIoKTtcclxuICAgICAgICAgICAgY29uc3QgY29udHJhY3QgPSBmZXRjaENvbnRyYWN0KHNpZ25lcik7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY29udHJhY3RcIiwgY29udHJhY3QpXHJcblxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCBhY2NvdW50OlwiLCBjdXJyZW50QWNjb3VudCk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IGNvbnRyYWN0LmNyZWF0ZUNhbXBhaWduKFxyXG4gICAgICAgICAgICAgICAgY3VycmVudEFjY291bnQsXHJcbiAgICAgICAgICAgICAgICB0aXRsZSxcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgZXRoZXJzLnBhcnNlVW5pdHMoYW1vdW50LCAxOCksIC8vIGV0aGVycy51dGlscy5wYXJzZVVuaXRzKGFtb3VudCwgMTgpIGZvciB2NVxyXG4gICAgICAgICAgICAgICAgbmV3IERhdGUoZGVhZGxpbmUpLmdldFRpbWUoKVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgYXdhaXQgdHJhbnNhY3Rpb24ud2FpdCgpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhbXBhaWduIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5OlwiLCB0cmFuc2FjdGlvbik7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNyZWF0aW5nIGNhbXBhaWduOlwiLCBlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBGZXRjaCBhbGwgY2FtcGFpZ25zXHJcbiAgICBjb25zdCBnZXRDYW1wYWlnbnMgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkpzb25ScGNQcm92aWRlcihTRVBPTElBX0FMQ0hFTVlfVVJMKTtcclxuICAgICAgICAgICAgY29uc3QgY29udHJhY3QgPSBmZXRjaENvbnRyYWN0KHByb3ZpZGVyKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJjb250cmFjdDpcIiwgY29udHJhY3QpO1xyXG4gICAgICAgICAgICBjb25zdCBjYW1wYWlnbnMgPSBhd2FpdCBjb250cmFjdC5nZXRDYW1wYWlnbnMoKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBjYW1wYWlnbnMubWFwKChjYW1wYWlnbiwgaSkgPT4gKHtcclxuICAgICAgICAgICAgICAgIG93bmVyOiBjYW1wYWlnbi5vd25lcixcclxuICAgICAgICAgICAgICAgIHRpdGxlOiBjYW1wYWlnbi50aXRsZSxcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBjYW1wYWlnbi5kZXNjcmlwdGlvbixcclxuICAgICAgICAgICAgICAgIHRhcmdldDogZXRoZXJzLmZvcm1hdEV0aGVyKGNhbXBhaWduLnRhcmdldC50b1N0cmluZygpKSxcclxuICAgICAgICAgICAgICAgIGRlYWRsaW5lOiBjYW1wYWlnbi5kZWFkbGluZS50b051bWJlcigpLFxyXG4gICAgICAgICAgICAgICAgYW1vdW50Q29sbGVjdGVkOiBldGhlcnMuZm9ybWF0RXRoZXIoY2FtcGFpZ24uYW1vdW50Q29sbGVjdGVkLnRvU3RyaW5nKCkpLFxyXG4gICAgICAgICAgICAgICAgcElkOiBpLFxyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGNhbXBhaWduczpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBGZXRjaCBjYW1wYWlnbnMgb2YgdGhlIGN1cnJlbnQgdXNlclxyXG4gICAgY29uc3QgZ2V0VXNlckNhbXBhaWducyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMuSnNvblJwY1Byb3ZpZGVyKFNFUE9MSUFfQUxDSEVNWV9VUkwpO1xyXG4gICAgICAgICAgICBjb25zdCBjb250cmFjdCA9IGZldGNoQ29udHJhY3QocHJvdmlkZXIpO1xyXG4gICAgICAgICAgICBjb25zdCBhbGxDYW1wYWlnbnMgPSBhd2FpdCBjb250cmFjdC5nZXRDYW1wYWlnbnMoKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6IFwiZXRoX2FjY291bnRzXCIgfSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRVc2VyID0gYWNjb3VudHNbMF07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJlZENhbXBhaWducyA9IGFsbENhbXBhaWducy5maWx0ZXIoKGNhbXBhaWduKSA9PiBjYW1wYWlnbi5vd25lciA9PT0gY3VycmVudFVzZXIpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGZpbHRlcmVkQ2FtcGFpZ25zLm1hcCgoY2FtcGFpZ24sIGkpID0+ICh7XHJcbiAgICAgICAgICAgICAgICBvd25lcjogY2FtcGFpZ24ub3duZXIsXHJcbiAgICAgICAgICAgICAgICB0aXRsZTogY2FtcGFpZ24udGl0bGUsXHJcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogY2FtcGFpZ24uZGVzY3JpcHRpb24sXHJcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IGV0aGVycy5mb3JtYXRFdGhlcihjYW1wYWlnbi50YXJnZXQudG9TdHJpbmcoKSksXHJcbiAgICAgICAgICAgICAgICBkZWFkbGluZTogY2FtcGFpZ24uZGVhZGxpbmUudG9OdW1iZXIoKSxcclxuICAgICAgICAgICAgICAgIGFtb3VudENvbGxlY3RlZDogZXRoZXJzLmZvcm1hdEV0aGVyKGNhbXBhaWduLmFtb3VudENvbGxlY3RlZC50b1N0cmluZygpKSxcclxuICAgICAgICAgICAgICAgIHBJZDogaSxcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB1c2VyIGNhbXBhaWduczpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBEb25hdGUgdG8gYSBjYW1wYWlnblxyXG4gICAgY29uc3QgZG9uYXRlID0gYXN5bmMgKHBJZCwgYW1vdW50KSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3Qgd2ViM01vZGFsID0gbmV3IFdlYjNNb2RhbCgpO1xyXG4gICAgICAgICAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgd2ViM01vZGFsLmNvbm5lY3QoKTtcclxuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkJyb3dzZXJQcm92aWRlcihjb25uZWN0aW9uKTtcclxuICAgICAgICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gZmV0Y2hDb250cmFjdChzaWduZXIpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCBjb250cmFjdC5kb25hdGVUb0NhbXBhaWduKHBJZCwge1xyXG4gICAgICAgICAgICAgICAgdmFsdWU6IGV0aGVycy5wYXJzZUV0aGVyKGFtb3VudCksIC8vIGV0aGVycy51dGlscy5wYXJzZUV0aGVyKGFtb3VudCkgZm9yIHY1XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgYXdhaXQgdHJhbnNhY3Rpb24ud2FpdCgpO1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbjtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZG9uYXRpbmc6XCIsIGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEZldGNoIGRvbmF0aW9ucyBmb3IgYSBjYW1wYWlnblxyXG4gICAgY29uc3QgZ2V0RG9uYXRpb25zID0gYXN5bmMgKHBJZCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5Kc29uUnBjUHJvdmlkZXIoU0VQT0xJQV9BTENIRU1ZX1VSTCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gZmV0Y2hDb250cmFjdChwcm92aWRlcik7XHJcbiAgICAgICAgICAgIGNvbnN0IGRvbmF0aW9ucyA9IGF3YWl0IGNvbnRyYWN0LmdldERvbmF0b3JzKHBJZCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG51bWJlck9mRG9uYXRpb25zID0gZG9uYXRpb25zWzBdLmxlbmd0aDtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBkb25hdGlvbnNbMF0ubWFwKChkb25hdG9yLCBpKSA9PiAoe1xyXG4gICAgICAgICAgICAgICAgZG9uYXRvcixcclxuICAgICAgICAgICAgICAgIGRvbmF0aW9uczogZXRoZXJzLmZvcm1hdEV0aGVyKGRvbmF0aW9uc1sxXVtpXS50b1N0cmluZygpKSxcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBkb25hdGlvbnM6XCIsIGVycm9yKTtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgYSB3YWxsZXQgaXMgY29ubmVjdGVkXHJcbiAgICBjb25zdCBjaGVja0lmV2FsbGV0Q29ubmVjdGVkID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmICghd2luZG93LmV0aGVyZXVtKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluc3RhbGwgTWV0YW1hc2tcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6IFwiZXRoX2FjY291bnRzXCIgfSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoYWNjb3VudHMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRDdXJyZW50QWNjb3VudChhY2NvdW50c1swXSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5vIGFjY291bnQgZm91bmRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY29ubmVjdGluZyB3YWxsZXQ6XCIsIGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIENvbm5lY3Qgd2FsbGV0IGZ1bmN0aW9uXHJcbiAgICBjb25zdCBjb25uZWN0V2FsbGV0ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmICghd2luZG93LmV0aGVyZXVtKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluc3RhbGwgTWV0YW1hc2tcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6IFwiZXRoX3JlcXVlc3RBY2NvdW50c1wiIH0pO1xyXG4gICAgICAgICAgICBzZXRDdXJyZW50QWNjb3VudChhY2NvdW50c1swXSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHdoaWxlIGNvbm5lY3Rpbmcgd2FsbGV0OlwiLCBlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIGNoZWNrSWZXYWxsZXRDb25uZWN0ZWQoKTtcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxDcm93ZEZ1bmRpbmdDb250ZXh0LlByb3ZpZGVyXHJcbiAgICAgICAgICAgIHZhbHVlPXt7XHJcbiAgICAgICAgICAgICAgICB0aXRsZURhdGEsXHJcbiAgICAgICAgICAgICAgICBjdXJyZW50QWNjb3VudCxcclxuICAgICAgICAgICAgICAgIGNyZWF0ZUNhbXBhaWduLFxyXG4gICAgICAgICAgICAgICAgZ2V0Q2FtcGFpZ25zLFxyXG4gICAgICAgICAgICAgICAgZ2V0VXNlckNhbXBhaWducyxcclxuICAgICAgICAgICAgICAgIGRvbmF0ZSxcclxuICAgICAgICAgICAgICAgIGdldERvbmF0aW9ucyxcclxuICAgICAgICAgICAgICAgIGNvbm5lY3RXYWxsZXQsXHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgICB7Y2hpbGRyZW59XHJcbiAgICAgICAgPC9Dcm93ZEZ1bmRpbmdDb250ZXh0LlByb3ZpZGVyPlxyXG4gICAgKTtcclxufTtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJjcmVhdGVDb250ZXh0IiwiV2ViM01vZGFsIiwiZXRoZXJzIiwiQ3Jvd2RGdW5kaW5nQUJJIiwiQ3Jvd2RGdW5kaW5nQWRkcmVzcyIsIlNFUE9MSUFfQUxDSEVNWV9VUkwiLCJmZXRjaENvbnRyYWN0Iiwic2lnbmVyT3JQcm92aWRlciIsImNvbnNvbGUiLCJsb2ciLCJDb250cmFjdCIsIkNyb3dkRnVuZGluZ0NvbnRleHQiLCJDcm93ZEZ1bmRpbmdQcm92aWRlciIsImNoaWxkcmVuIiwidGl0bGVEYXRhIiwiY3VycmVudEFjY291bnQiLCJzZXRDdXJyZW50QWNjb3VudCIsImNyZWF0ZUNhbXBhaWduIiwiY2FtcGFpZ24iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYW1vdW50IiwiZGVhZGxpbmUiLCJ3ZWIzTW9kYWwiLCJjb25uZWN0aW9uIiwiY29ubmVjdCIsInByb3ZpZGVyIiwiQnJvd3NlclByb3ZpZGVyIiwic2lnbmVyIiwiZ2V0U2lnbmVyIiwiY29udHJhY3QiLCJ0cmFuc2FjdGlvbiIsInBhcnNlVW5pdHMiLCJEYXRlIiwiZ2V0VGltZSIsIndhaXQiLCJlcnJvciIsImdldENhbXBhaWducyIsIkpzb25ScGNQcm92aWRlciIsImNhbXBhaWducyIsIm1hcCIsImkiLCJvd25lciIsInRhcmdldCIsImZvcm1hdEV0aGVyIiwidG9TdHJpbmciLCJ0b051bWJlciIsImFtb3VudENvbGxlY3RlZCIsInBJZCIsImdldFVzZXJDYW1wYWlnbnMiLCJhbGxDYW1wYWlnbnMiLCJhY2NvdW50cyIsIndpbmRvdyIsImV0aGVyZXVtIiwicmVxdWVzdCIsIm1ldGhvZCIsImN1cnJlbnRVc2VyIiwiZmlsdGVyZWRDYW1wYWlnbnMiLCJmaWx0ZXIiLCJkb25hdGUiLCJkb25hdGVUb0NhbXBhaWduIiwidmFsdWUiLCJwYXJzZUV0aGVyIiwibG9jYXRpb24iLCJyZWxvYWQiLCJnZXREb25hdGlvbnMiLCJkb25hdGlvbnMiLCJnZXREb25hdG9ycyIsIm51bWJlck9mRG9uYXRpb25zIiwibGVuZ3RoIiwiZG9uYXRvciIsImNoZWNrSWZXYWxsZXRDb25uZWN0ZWQiLCJjb25uZWN0V2FsbGV0IiwiUHJvdmlkZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./Context/CrowdFunding.js\n"));

/***/ })

});