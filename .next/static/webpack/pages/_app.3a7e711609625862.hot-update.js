"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/CrowdFunding.js":
/*!*********************************!*\
  !*** ./Context/CrowdFunding.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CrowdFundingContext: () => (/* binding */ CrowdFundingContext),\n/* harmony export */   CrowdFundingProvider: () => (/* binding */ CrowdFundingProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _contants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contants */ \"./Context/contants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n// Use Alchemy Sepolia URL for RPC provider\nconst SEPOLIA_ALCHEMY_URL = \"https://eth-sepolia.g.alchemy.com/v2/Lo87KWizL62fSIBcI43XrftyX8Q9Pdc7\";\n// Helper function to fetch contract instance\nconst fetchContract = (signerOrProvider)=>{\n    console.log(\"crowdfunding address : \", _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress);\n    console.log(\"crowdfunding ABI  : \", _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI);\n    console.log(\"Signer  : \", signerOrProvider);\n    return new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress, _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI, signerOrProvider);\n};\n// Create Context\nconst CrowdFundingContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst CrowdFundingProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const titleData = \"Crowd Funding Contract\";\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Function to create a campaign\n    const createCampaign = async (campaign)=>{\n        try {\n            const { title, description, amount, deadline } = campaign;\n            const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n            const connection = await web3Modal.connect();\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.BrowserProvider(connection);\n            const signer = await provider.getSigner();\n            const contract = fetchContract(signer);\n            console.log(\"contract\", contract);\n            console.log(\"Connected account:\", currentAccount);\n            const transaction = await contract.createCampaign(currentAccount, title, description, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseUnits(amount, 18), new Date(deadline).getTime());\n            await transaction.wait();\n            console.log(\"Campaign created successfully:\", transaction);\n        } catch (error) {\n            console.error(\"Error creating campaign:\", error);\n        }\n    };\n    // Fetch all campaigns\n    const getCampaigns = async ()=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            // Verify provider is connected\n            const network = await provider.getNetwork();\n            console.log(\"Connected to network:\", network.name);\n            console.log(\"Using contract address:\", _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress);\n            // Check if the address is valid\n            if (!ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.isAddress(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress)) {\n                throw new Error('Invalid contract address format');\n            }\n            // Get contract code\n            const code = await provider.getCode(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress);\n            console.log(\"Contract code at address:\", code);\n            if (code === '0x') {\n                throw new Error(\"No contract deployed at address \".concat(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress));\n            }\n            const contract = fetchContract(provider);\n            const campaigns = await contract.getCampaigns();\n            console.log(\"Raw campaigns data:\", campaigns);\n            if (!Array.isArray(campaigns)) {\n                console.log(\"Campaigns is not an array:\", campaigns);\n                return [];\n            }\n            return campaigns.map((campaign, i)=>({\n                    owner: campaign.owner,\n                    title: campaign.title,\n                    description: campaign.description,\n                    target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.target.toString()),\n                    deadline: campaign.deadline.toNumber(),\n                    amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.amountCollected.toString()),\n                    pId: i\n                }));\n        } catch (error) {\n            console.error(\"Detailed error in getCampaigns:\");\n            console.error(\"Error name:\", error.name);\n            console.error(\"Error message:\", error.message);\n            if (error.data) console.error(\"Error data:\", error.data);\n            return [];\n        }\n    };\n    // Fetch campaigns of the current user\n    const getUserCampaigns = async ()=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            const contract = fetchContract(provider);\n            const allCampaigns = await contract.getCampaigns();\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            const currentUser = accounts[0];\n            const filteredCampaigns = allCampaigns.filter((campaign)=>campaign.owner === currentUser);\n            return filteredCampaigns.map((campaign, i)=>({\n                    owner: campaign.owner,\n                    title: campaign.title,\n                    description: campaign.description,\n                    target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.target.toString()),\n                    deadline: campaign.deadline.toNumber(),\n                    amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(campaign.amountCollected.toString()),\n                    pId: i\n                }));\n        } catch (error) {\n            console.error(\"Error fetching user campaigns:\", error);\n            return [];\n        }\n    };\n    // Donate to a campaign\n    const donate = async (pId, amount)=>{\n        try {\n            const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n            const connection = await web3Modal.connect();\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.BrowserProvider(connection);\n            const signer = await provider.getSigner();\n            const contract = fetchContract(signer);\n            const transaction = await contract.donateToCampaign(pId, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.parseEther(amount)\n            });\n            await transaction.wait();\n            window.location.reload();\n            return transaction;\n        } catch (error) {\n            console.error(\"Error donating:\", error);\n        }\n    };\n    // Fetch donations for a campaign\n    const getDonations = async (pId)=>{\n        try {\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.JsonRpcProvider(SEPOLIA_ALCHEMY_URL);\n            const contract = fetchContract(provider);\n            const donations = await contract.getDonators(pId);\n            const numberOfDonations = donations[0].length;\n            return donations[0].map((donator, i)=>({\n                    donator,\n                    donations: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.formatEther(donations[1][i].toString())\n                }));\n        } catch (error) {\n            console.error(\"Error fetching donations:\", error);\n            return [];\n        }\n    };\n    // Check if a wallet is connected\n    const checkIfWalletConnected = async ()=>{\n        try {\n            if (!window.ethereum) {\n                console.log(\"Install Metamask\");\n                return;\n            }\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0]);\n            } else {\n                console.log(\"No account found\");\n            }\n        } catch (error) {\n            console.error(\"Error connecting wallet:\", error);\n        }\n    };\n    // Connect wallet function\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) {\n                console.log(\"Install Metamask\");\n                return;\n            }\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0]);\n        } catch (error) {\n            console.error(\"Error while connecting wallet:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CrowdFundingProvider.useEffect\": ()=>{\n            checkIfWalletConnected();\n        }\n    }[\"CrowdFundingProvider.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CrowdFundingContext.Provider, {\n        value: {\n            titleData,\n            currentAccount,\n            createCampaign,\n            getCampaigns,\n            getUserCampaigns,\n            donate,\n            getDonations,\n            connectWallet\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\Techstack\\\\Hackathon\\\\miniprojectcrowdfunding\\\\Context\\\\CrowdFunding.js\",\n        lineNumber: 210,\n        columnNumber: 9\n    }, undefined);\n};\n_s(CrowdFundingProvider, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n_c = CrowdFundingProvider;\nvar _c;\n$RefreshReg$(_c, \"CrowdFundingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/CrowdFunding.js\n"));

/***/ })

});